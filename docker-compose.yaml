services:
  nginx:
    image: docker.io/nginx:1.27
    container_name: nginx
    restart: unless-stopped
    ports:
      - 80:80
    networks:
      - planning_net
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
    depends_on:
      planning_service:
        condition: service_healthy

  mariadb:
    image: docker.io/mariadb:11.1.4
    container_name: ${MYSQL_HOST}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - planning_net
    ports:
      - ${MYSQL_PORT:-3306}:${MYSQL_PORT:-3306}
    volumes:
      - mariadb_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  planning_service:
    build:
      context: .
      dockerfile: Dockerfile
    image: planning_service:latest
    pull_policy: build
    container_name: planning_service
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - planning_net
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    volumes:
      - .env:/home/dude/planning/.env:ro
      - ./src:/home/dude/planning/src:rw
      - ./gunicorn.conf.py:/home/dude/planning/gunicorn.conf.py:ro
      - static_volume:/home/dude/planning/src/staticfiles:rw
      - media_volume:/home/dude/planning/src/media:rw
    command: gunicorn -c ../gunicorn.conf.py core.wsgi:application
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8000/auth/healthcheck/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      mariadb:
        condition: service_healthy

volumes:
  mariadb_data:
    name: mariadb_data
  static_volume:
    name: static_volume
  media_volume:
    name: media_volume

networks:
  planning_net:
    name: planning_net
    external: false
